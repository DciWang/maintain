<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dciwang.mbg.mapper.SysSolidUserMapper">
  <resultMap id="BaseResultMap" type="com.dciwang.mbg.model.SysSolidUser">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="password_status" jdbcType="CHAR" property="passwordStatus" />
    <result column="password_updated_at" jdbcType="TIMESTAMP" property="passwordUpdatedAt" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="login_wrong_count" jdbcType="INTEGER" property="loginWrongCount" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="login_time" jdbcType="VARCHAR" property="loginTime" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_name, user_email, password, password_status, password_updated_at, token, 
    login_wrong_count, remark, login_time, login_ip, created_at, updated_at, updated_by
  </sql>
  <select id="selectByExample" parameterType="com.dciwang.mbg.model.SysSolidUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_solid_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_solid_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_solid_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.dciwang.mbg.model.SysSolidUserExample">
    delete from sys_solid_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dciwang.mbg.model.SysSolidUser">
    insert into sys_solid_user (user_id, user_name, user_email, 
      password, password_status, password_updated_at, 
      token, login_wrong_count, remark, 
      login_time, login_ip, created_at, 
      updated_at, updated_by)
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{passwordStatus,jdbcType=CHAR}, #{passwordUpdatedAt,jdbcType=TIMESTAMP}, 
      #{token,jdbcType=VARCHAR}, #{loginWrongCount,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{loginTime,jdbcType=VARCHAR}, #{loginIp,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dciwang.mbg.model.SysSolidUser">
    insert into sys_solid_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="passwordStatus != null">
        password_status,
      </if>
      <if test="passwordUpdatedAt != null">
        password_updated_at,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="loginWrongCount != null">
        login_wrong_count,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordStatus != null">
        #{passwordStatus,jdbcType=CHAR},
      </if>
      <if test="passwordUpdatedAt != null">
        #{passwordUpdatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="loginWrongCount != null">
        #{loginWrongCount,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dciwang.mbg.model.SysSolidUserExample" resultType="java.lang.Integer">
    select count(*) from sys_solid_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_solid_user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordStatus != null">
        password_status = #{record.passwordStatus,jdbcType=CHAR},
      </if>
      <if test="record.passwordUpdatedAt != null">
        password_updated_at = #{record.passwordUpdatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.loginWrongCount != null">
        login_wrong_count = #{record.loginWrongCount,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTime != null">
        login_time = #{record.loginTime,jdbcType=VARCHAR},
      </if>
      <if test="record.loginIp != null">
        login_ip = #{record.loginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_solid_user
    set user_id = #{record.userId,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      password_status = #{record.passwordStatus,jdbcType=CHAR},
      password_updated_at = #{record.passwordUpdatedAt,jdbcType=TIMESTAMP},
      token = #{record.token,jdbcType=VARCHAR},
      login_wrong_count = #{record.loginWrongCount,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      login_time = #{record.loginTime,jdbcType=VARCHAR},
      login_ip = #{record.loginIp,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      updated_by = #{record.updatedBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dciwang.mbg.model.SysSolidUser">
    update sys_solid_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordStatus != null">
        password_status = #{passwordStatus,jdbcType=CHAR},
      </if>
      <if test="passwordUpdatedAt != null">
        password_updated_at = #{passwordUpdatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="loginWrongCount != null">
        login_wrong_count = #{loginWrongCount,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dciwang.mbg.model.SysSolidUser">
    update sys_solid_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      password_status = #{passwordStatus,jdbcType=CHAR},
      password_updated_at = #{passwordUpdatedAt,jdbcType=TIMESTAMP},
      token = #{token,jdbcType=VARCHAR},
      login_wrong_count = #{loginWrongCount,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=VARCHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>