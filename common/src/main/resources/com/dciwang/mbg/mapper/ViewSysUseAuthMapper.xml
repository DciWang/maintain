<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dciwang.mbg.mapper.ViewSysUseAuthMapper">
  <resultMap id="BaseResultMap" type="com.dciwang.mbg.model.ViewSysUseAuth">
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="password_status" jdbcType="CHAR" property="passwordStatus" />
    <result column="password_updated_at" jdbcType="TIMESTAMP" property="passwordUpdatedAt" />
    <result column="login_wrong_count" jdbcType="INTEGER" property="loginWrongCount" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.dciwang.mbg.model.ViewSysUseAuth">
    <result column="role_name" jdbcType="LONGVARCHAR" property="roleName" />
    <result column="auth_id" jdbcType="LONGVARCHAR" property="authId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_name, password, password_status, password_updated_at, login_wrong_count, 
    user_email
  </sql>
  <sql id="Blob_Column_List">
    role_name, auth_id
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.dciwang.mbg.model.ViewSysUseAuthExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from view_sys_use_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.dciwang.mbg.model.ViewSysUseAuthExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from view_sys_use_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.dciwang.mbg.model.ViewSysUseAuthExample">
    delete from view_sys_use_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dciwang.mbg.model.ViewSysUseAuth">
    insert into view_sys_use_auth (user_id, user_name, password, 
      password_status, password_updated_at, login_wrong_count, 
      user_email, role_name, auth_id
      )
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{passwordStatus,jdbcType=CHAR}, #{passwordUpdatedAt,jdbcType=TIMESTAMP}, #{loginWrongCount,jdbcType=INTEGER}, 
      #{userEmail,jdbcType=VARCHAR}, #{roleName,jdbcType=LONGVARCHAR}, #{authId,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dciwang.mbg.model.ViewSysUseAuth">
    insert into view_sys_use_auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="passwordStatus != null">
        password_status,
      </if>
      <if test="passwordUpdatedAt != null">
        password_updated_at,
      </if>
      <if test="loginWrongCount != null">
        login_wrong_count,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="authId != null">
        auth_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="passwordStatus != null">
        #{passwordStatus,jdbcType=CHAR},
      </if>
      <if test="passwordUpdatedAt != null">
        #{passwordUpdatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="loginWrongCount != null">
        #{loginWrongCount,jdbcType=INTEGER},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=LONGVARCHAR},
      </if>
      <if test="authId != null">
        #{authId,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dciwang.mbg.model.ViewSysUseAuthExample" resultType="java.lang.Integer">
    select count(*) from view_sys_use_auth
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update view_sys_use_auth
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordStatus != null">
        password_status = #{record.passwordStatus,jdbcType=CHAR},
      </if>
      <if test="record.passwordUpdatedAt != null">
        password_updated_at = #{record.passwordUpdatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginWrongCount != null">
        login_wrong_count = #{record.loginWrongCount,jdbcType=INTEGER},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.authId != null">
        auth_id = #{record.authId,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update view_sys_use_auth
    set user_id = #{record.userId,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      password_status = #{record.passwordStatus,jdbcType=CHAR},
      password_updated_at = #{record.passwordUpdatedAt,jdbcType=TIMESTAMP},
      login_wrong_count = #{record.loginWrongCount,jdbcType=INTEGER},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      role_name = #{record.roleName,jdbcType=LONGVARCHAR},
      auth_id = #{record.authId,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update view_sys_use_auth
    set user_id = #{record.userId,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      password_status = #{record.passwordStatus,jdbcType=CHAR},
      password_updated_at = #{record.passwordUpdatedAt,jdbcType=TIMESTAMP},
      login_wrong_count = #{record.loginWrongCount,jdbcType=INTEGER},
      user_email = #{record.userEmail,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>